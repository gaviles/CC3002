package tarea.Processors;

import java.util.ArrayList;

public class StemAndLeafProcessor implements HistogramProcessor {
	
	private DataProcessor dataProcessor;
	private String histogram;
	private String[] intervalsValue;

	public StemAndLeafProcessor(String string){
		setData(string);	
	}
	public StemAndLeafProcessor() {
	}
	
	public void setData(String string){
		dataProcessor = new DataProcessor(string);
		generateHistogram();
	}
	private void generateHistogram(){
		
		dataProcessor.sortValuesBySize();		
		ArrayList<IntervalProcessor> intervals = getIntervals();
		
		histogram = "valor   |                       | frecuencia\n";
		int maximumRpetitions = intervals.get(0).getSize();
		
		for(IntervalProcessor interval: intervals){
			
			String line = " ";
			
			line = fillWithSpaces( line.concat( String.valueOf( (int)(interval.getMinimum()/10) ) ) , 8 );
			line = line.concat("| ");
			line = line.concat( intervalsValue[percentage] );
			line = fillWithSpaces(line, 32 );
			line = line.concat("| ");
			line = line.concat(String.valueOf(interval.getSize()));
			histogram = histogram.concat(line).concat("\n");			
		}
	}
	
	// This function fills the given string with spaces until get the 
	// given number of length
	private String fillWithSpaces(String string, int length){
		if( string.length() < length ){
			return fillWithSpaces(string.concat(" "), length);
		}
		return string;	
	}
	
	public String getHistogram() {
		return histogram;
	}
	
	public ArrayList<IntervalProcessor> getIntervals(){
		return dataProcessor.getIntervals();
	}
}