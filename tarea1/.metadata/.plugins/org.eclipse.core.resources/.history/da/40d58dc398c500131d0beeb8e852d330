package tarea;

public class SparkLineProcessor implements HistogramProcessor {
	
	private DataProcessor dataProcessor;
	private String histogram;
	
	public SparkLineProcessor(String string){
		
		dataProcessor = new DataProcessor(string);
		generateHistogram();
	}
	public void setData(String string){
		dataProcessor = new DataProcessor(string);
		generateHistogram();
	}
	private void generateHistogram(){
		
		double interval = (dataProcessor.getMaximun()-dataProcessor.getMinimun())/9;
		
		int[] datos = dataProcessor.getParsedData();
		
		StringBuilder histogramBuilder = new StringBuilder();
		
		for(int i = 0; i < datos.length ; i++ ){
			
			if( datos[i] < (dataProcessor.getMinimun()+interval) ){
				histogramBuilder.append((char)9601);
			}else if( datos[i] < (dataProcessor.getMinimun()+interval*2) ){
				histogramBuilder.append((char)9602);
			}else if( datos[i] < (dataProcessor.getMinimun()+interval*3) ){
				histogramBuilder.append((char)9603);
			}else if( datos[i] < (dataProcessor.getMinimun()+interval*4) ){
				histogramBuilder.append((char)9604);
			}else if( datos[i] < (dataProcessor.getMinimun()+interval*5) ){
				histogramBuilder.append((char)9605);
			}else if( datos[i] < (dataProcessor.getMinimun()+interval*6) ){
				histogramBuilder.append((char)9606);
			}else if( datos[i] < (dataProcessor.getMinimun()+interval*7) ){
				histogramBuilder.append((char)9607);
			}else if( datos[i] < (dataProcessor.getMinimun()+interval*8) ){
				histogramBuilder.append((char)9608);
			}else{
				histogramBuilder.append((char)9609);
			}
		}
		histogram = histogramBuilder.toString();
	}
	public String getHistogram(){
		return Histogram;
	}
}
